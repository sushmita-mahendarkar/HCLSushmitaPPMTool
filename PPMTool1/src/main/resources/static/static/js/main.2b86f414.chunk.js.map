{"version":3,"sources":["actions/types.js","actions/ProjectActions.js","Components/Project/ProjectItem.js","Components/Project/CreateProjectButton.js","Components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","Components/Layout/Header.js","reducers/errorReducers.js","reducers/ProjectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","Components/Project/UpdateProject.js","actions/backlogActions.js","Components/ProjectBoard/ProjectTasks/ProjectTask.js","Components/ProjectBoard/Backlog.js","Components/ProjectBoard/ProjectBoard.js","Components/ProjectBoard/ProjectTasks/AddProjectTask.js","Components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","Components/Project/AddProject.js","Components/Layout/Landing.js","Components/UserManagement/Register.js","Components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","initialState","project_tasks","project_task","combineReducers","errors","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","onChange","assertThisInitialized","onSubmit","nextProps","setState","_nextProps$project","match","params","getProject","e","defineProperty","target","name","value","preventDefault","classnames","is-invalid","placeholder","disabled","_ref3","_callee3","_context3","_x3","getBacklog","backlog_id","ProjectTask","pt_id","deleteProjectTask","dataTransfer","setData","JSON","stringify","priorityString","priorityClass","priority","draggable","onDragStart","summary","acceptanceCriteria","_ref6","_callee6","_context6","_x6","Backlog","newstatus","pt","parse","getData","status","updateProjectTaskCategory","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","onDragOver","onDrop","_ref5","_callee5","_context5","patch","_x5","ProjectBoard","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","AddProject","newProject","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","securityUtils_SecuredRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2b86f414.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\nimport { async } from \"q\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (window.confirm(\"Are you sure you want to delete the complete project?\")) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/ProjectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/ProjectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","    \r\nimport axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport { async } from \"q\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n      //Login Request\r\n      const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n      // extract token\r\n      const { token } = res.data;\r\n      // store token\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // set our token in header \r\n      setJWTToken(token);\r\n      // decode token \r\n      const decoded = jwt_decode(token);\r\n      // dispatch to securityReducer\r\n      dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  };\r\n\r\n  export const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: {}\r\n    });\r\n  }","import React, { Component } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../actions/securityActions\"\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}","import {\r\n    GET_BACKLOG,\r\n    GET_PROJECT_TASK,\r\n    DELETE_PROJECT_TASK\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_BACKLOG:\r\n        return {\r\n          ...state,\r\n          project_tasks: action.payload\r\n        };\r\n  \r\n      case GET_PROJECT_TASK:\r\n        return {\r\n          ...state,\r\n          project_task: action.payload\r\n        };\r\n  \r\n      case DELETE_PROJECT_TASK:\r\n        return {\r\n          ...state,\r\n          project_tasks: state.project_tasks.filter(\r\n            project_task => project_task.projectSequence !== action.payload\r\n          )\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\nimport errorReducers from \"./errorReducers\";\nimport ProjectReducer from \"./ProjectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducers,\n  project: ProjectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware)\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/ProjectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(UpdateProject, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentiifer\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg \", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProjectTaskCategory = (pt) => async dispatch => {\r\n  \r\n  try {\r\n    let pt_id = pt.projectSequence;\r\n  let backlog_id = pt.projectIdentifier;\r\n  await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, pt);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  onDragStart(e, project_task) {\r\n    e.dataTransfer.setData(\"pt_dragged\", JSON.stringify(project_task));\r\n  };\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div\r\n      className=\"card mb-1 bg-light\"\r\n        draggable\r\n        onDragStart={e => this.onDragStart(e, project_task)}\r\n        \r\n      >\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\nimport {getBacklog, updateProjectTaskCategory} from \"../../actions/backlogActions\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Backlog extends Component {\r\n  \r\n  onDragOver(e){\r\n    e.preventDefault();\r\n  };\r\n\r\n  async onDrop(e, newstatus) {\r\n    \r\n    let pt = JSON.parse(e.dataTransfer.getData(\"pt_dragged\"));\r\n\r\n    pt.status=newstatus;\r\n\r\n    // const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    // res.data.status = newstatus;\r\n    await this.props.updateProjectTaskCategory(pt);\r\n    \r\n    await this.props.getBacklog(pt.projectIdentifier);\r\n  }\r\n\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n        <div\r\n            className=\"col-md-4\"\r\n            onDragOver={this.onDragOver}\r\n            onDrop={e => this.onDrop(e, \"TO_DO\")}\r\n          >\r\n          \r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div\r\n            className=\"col-md-4\"\r\n            onDragOver={this.onDragOver}\r\n            onDrop={e => this.onDrop(e, \"IN_PROGRESS\")}\r\n          >\r\n          \r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div\r\n            className=\"col-md-4\"\r\n            onDragOver={this.onDragOver}\r\n            onDrop={e => this.onDrop(e, \"DONE\")}\r\n          >\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBacklog.propTypes = {\r\n  updateProjectTaskCategory: PropTypes.func.isRequired,\r\n  getBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { updateProjectTaskCategory, getBacklog }\r\n)(Backlog);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        }else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    \r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/ProjectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Landing extends Component {\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\r\nimport {createNewUser} from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors:{}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.security.validToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if(nextProps.errors){\r\n      this.setState({errors:nextProps.errors});\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./Components/Dashboard\";\nimport Header from \"./Components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./Components/Project/UpdateProject\";\nimport ProjectBoard from \"./Components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./Components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./Components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport AddProject from \"./Components/Project/AddProject\";\nimport Landing from \"./Components/Layout/Landing\";\nimport Register from \"./Components/UserManagement/Register\";\nimport Login from \"./Components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n          \n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            <switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n            </switch>\n\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}